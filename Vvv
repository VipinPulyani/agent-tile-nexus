import pandas as pd
import numpy as np

def summarize_differences_by_type(df_sp: pd.DataFrame, df_py: pd.DataFrame) -> pd.DataFrame:
    assert df_sp.shape == df_py.shape, "Shape mismatch between SP and Python output"
    summary = []

    for col in df_sp.columns:
        sp_col = df_sp[col]
        py_col = df_py[col]
        
        # Determine mismatches
        mismatches = sp_col != py_col
        num_mismatches = mismatches.sum()
        total = len(sp_col)

        if num_mismatches == 0:
            continue

        dtype = sp_col.dtype
        diff_summary = {
            "column": col,
            "dtype": str(dtype),
            "total_rows": total,
            "mismatched_rows": int(num_mismatches),
            "mismatch_percent": round((num_mismatches / total) * 100, 2)
        }

        if pd.api.types.is_numeric_dtype(dtype):
            diffs = (sp_col[mismatches] - py_col[mismatches]).abs()
            diff_summary.update({
                "mean_diff": diffs.mean(),
                "min_diff": diffs.min(),
                "max_diff": diffs.max(),
                "example_sp": sp_col[mismatches].iloc[0],
                "example_py": py_col[mismatches].iloc[0]
            })

        elif pd.api.types.is_string_dtype(dtype):
            diff_summary.update({
                "example_sp": sp_col[mismatches].iloc[0],
                "example_py": py_col[mismatches].iloc[0]
            })

        elif pd.api.types.is_datetime64_any_dtype(dtype):
            date_diffs = (sp_col[mismatches] - py_col[mismatches]).dt.days
            diff_summary.update({
                "min_day_diff": date_diffs.min(),
                "max_day_diff": date_diffs.max(),
                "example_sp": sp_col[mismatches].iloc[0],
                "example_py": py_col[mismatches].iloc[0]
            })

        elif pd.api.types.is_bool_dtype(dtype):
            sp_vals = sp_col[mismatches].value_counts().to_dict()
            py_vals = py_col[mismatches].value_counts().to_dict()
            diff_summary.update({
                "sp_bool_counts": sp_vals,
                "py_bool_counts": py_vals
            })

        else:
            diff_summary.update({
                "example_sp": str(sp_col[mismatches].iloc[0]),
                "example_py": str(py_col[mismatches].iloc[0])
            })

        summary.append(diff_summary)

    return pd.DataFrame(summary)

# Example usage:
# df_summary = summarize_differences_by_type(df_sp_output, df_py_output)
# print(df_summary)
